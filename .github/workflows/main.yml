name: demyx/nginx

on:
  push:
    branches:
      - master
  schedule:
    - cron:  '0 0 * * 6'
  workflow_dispatch:

jobs:
  master:
    runs-on: ubuntu-latest
    env:
      DEMYX_REPOSITORY: nginx
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login
        uses: docker/login-action@v1
        with:
          username: demyx
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build
        run: |
          docker pull demyx/mariadb
          docker pull demyx/wordpress
          docker build -t demyx/${{ env.DEMYX_REPOSITORY }} .
      - name: Test
        id: test
        shell: 'script -q -e -c "bash {0}"'
        run: |
          docker network create demyx

          docker run -d \
            --name=demyx_db \
            --network=demyx \
            -e DEMYX_DATABASE=demyx \
            -e DEMYX_USERNAME=demyx \
            -e DEMYX_PASSWORD=demyx \
            -e DEMYX_ROOT_PASSWORD="$(head /dev/urandom | tr -dc "a-z0-9" | head -c 10 && echo)" \
            demyx/mariadb

          sleep 10

          docker run -d \
            --name=demyx_wp \
            --network=demyx \
            -v demyx_wp:/demyx \
            -e DEMYX_DB_HOST=demyx_db \
            -e DEMYX_DB_NAME=demyx \
            -e DEMYX_DB_USER=demyx \
            -e DEMYX_DB_PASSWORD=demyx \
            demyx/wordpress

          sleep 10

          docker run -d \
            --name=${{ env.DEMYX_REPOSITORY }} \
            --network=demyx \
            -v demyx_wp:/demyx \
            -e DEMYX_WORDPRESS=true \
            -e DEMYX_WORDPRESS_CONTAINER=demyx_wp \
            -e DEMYX_WORDPRESS_CONTAINER_PORT=9000 \
            -e DEMYX_DOMAIN=localhost \
            -e DEMYX_CACHE=true \
            demyx/${{ env.DEMYX_REPOSITORY }}

          sleep 10

          DEMYX_TEST="$(docker exec ${{ env.DEMYX_REPOSITORY }} sh -c "wget -qO- http://localhost" 2>&1)"
          DEMYX_TEST_RESPONSE="$(docker exec ${{ env.DEMYX_REPOSITORY }} sh -c "curl -I http://localhost" 2>&1)"
          DEMYX_TEST_CACHE="$(docker exec ${{ env.DEMYX_REPOSITORY }} sh -c "curl -I http://localhost; curl http://localhost/purge/" 2>&1)"

          if [[ "$DEMYX_TEST" == *"Hello world"* ]]; then
            echo "WordPress test passed."
          else
            exit 1
          fi

          if [[ "$DEMYX_TEST_RESPONSE" == *"X-Powered-By: Demyx - https://demyx.sh"* ]]; then
            echo "HTTP headers test passed."
          else
            exit 1
          fi

          if [[ "$DEMYX_TEST_CACHE" == *"Successful purge"* ]]; then
            echo "Cache purge test passed."
          else
            exit 1
          fi
      - name: Version
        run: |
          DEMYX_NGINX_ALPINE_VERSION="$(docker exec ${{ env.DEMYX_REPOSITORY }} cat /etc/os-release | grep VERSION_ID | cut -c 12-)"
          DEMYX_NGINX_VERSION="$(docker exec ${{ env.DEMYX_REPOSITORY }} ${{ env.DEMYX_REPOSITORY }} -V 2>&1 | head -n 1 | cut -c 22-)"
          DEMYX_JQ="$(jq ".alpine = \"$DEMYX_NGINX_ALPINE_VERSION\" | .nginx = \"$DEMYX_NGINX_VERSION\"" version.json)"

          # Update versions
          echo "$DEMYX_JQ" > version.json
          echo "DEMYX_NGINX_ALPINE_VERSION=$DEMYX_NGINX_ALPINE_VERSION
          DEMYX_NGINX_VERSION=$DEMYX_NGINX_VERSION" > VERSION
      - name: Push
        run: |
          # Not sure why this is being created?
          [[ -f typescript ]] && rm -f typescript

          DEMYX_CHECK_STATUS="$(git status)"
          if [[ "$DEMYX_CHECK_STATUS" != *"nothing to commit"* ]]; then
            DEMYX_RANDOM_QUOTE="$(curl -s "https://api.quotable.io/random?tags=technology" | jq -r '. | "\"\(.content)\" - \(.author)"')"
            git config --global user.name github-actions[bot]
            git config --global user.email github-actions[bot]@users.noreply.github.com
            git remote set-url origin https://demyxsh:${{ secrets.DEMYX_TOKEN }}@github.com/demyxsh/${{ env.DEMYX_REPOSITORY }}
            git add .
            git commit -m "${DEMYX_RANDOM_QUOTE:-Scheduled Build}"
            git push
          fi

          docker push demyx/${{ env.DEMYX_REPOSITORY }}
